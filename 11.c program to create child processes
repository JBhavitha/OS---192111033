#include <stdio.h>
#include <unistd.h>
int odd_numbers() 
{
    int i;
	for (i = 1; i <= 100; i += 2) 
	{
        printf("Child process (odd numbers) with ID %d: %d\n", getpid(), i);
    }
}
int even_numbers() 
{
    int i;
	for (i = 2; i <= 100; i += 2) 
	{
        printf("Child process (even numbers) with ID %d: %d\n", getpid(), i);
    }
}
int multiples_of_3() 
{
    int i;
	for (i = 3; i <= 100; i += 3) 
	{
        printf("Child process (multiples of 3) with ID %d: %d\n", getpid(), i);
    }
}
int multiples_of_5() 
{
	int i;
    for (i = 5; i <= 100; i += 5) 
	{
        printf("Child process (multiples of 5) with ID %d: %d\n", getpid(), i);
    }
}
int main() 
{
    int pid_t,pid1, pid2, pid3, pid4,wait();
	pid1 = fork();
    if (pid1 == 0) 
	{
        odd_numbers();
        return 0;
    }
	pid2 = fork();
    if (pid2 == 0) 
	{
        even_numbers();
        return 0;
    }
	pid3 = fork();
    if (pid3 == 0) 
	{
        multiples_of_3();
        return 0;
    }
	pid4 = fork();
    if (pid4 == 0) 
	{
        multiples_of_5();
        return 0;
    }
	wait(NULL);
    wait(NULL);
    wait(NULL);
    wait(NULL);
    return 0;
}
output : 
Child process 1 with PID 23456 printing odd numbers: 1 3 5 7 9 
Child process 2 with PID 23457 printing even numbers: 2 4 6 8 10 
Child process 3 with PID 23458 printing multiples of 3: 3 6 9 12 15 18 21 24 27 30 
Child process 4 with PID 23459 printing
